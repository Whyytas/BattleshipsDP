@if (CurrentRoom is not null)
{
    <div class="container">
        <h3>@CurrentRoom.RoomName</h3>

        @if (CurrentRoom.Players.Count < 4)
        {
            <h4 class="info-text">Waiting for more players to join...</h4>
            <h4 class="info-text">Player count - @CurrentRoom.Players.Count</h4>
        }

        @if ((!CurrentRoom.Game.GameStarted || CurrentRoom.Game.GameOver)
       && CurrentRoom.Game.ATeamPlayer1Id == myPlayerId
       && CurrentRoom.Players.Count == 4)
        {
            <button class="btn" @onclick="StartGame">Start Game</button>
        }
    </div>
}

<style>
    .container {
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        height: 100vh;
        text-align: center;
    }

    h3 {
        margin-bottom: 20px;
        font-size: 24px;
    }

    .info-text {
        font-size: 18px;
        color: #ff5722;
        margin-bottom: 20px;
    }

    .btn {
        padding: 10px 20px;
        background-color: #007bff;
        color: white;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        transition: background-color 0.3s;
    }

    .btn:hover {
        background-color: #0056b3;
    }
</style>


@code {
    private string? myPlayerId;
    private bool GameStarted;
    [CascadingParameter]
    public HubConnection? HubConnection { get; set; }
    [Parameter]
    public GameRoom? CurrentRoom { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (CurrentRoom is null || HubConnection is null ||
        HubConnection.ConnectionId is null)
            return;
        GameStarted = false;
        myPlayerId = HubConnection.ConnectionId;

        HubConnection.On<Player>("PlayerJoined", newPlayer =>
        {
            CurrentRoom.TryAddPlayer(newPlayer);
            StateHasChanged();
        });

        HubConnection.On<GameRoom>("UpdateGame", serverRoom =>
        {
            CurrentRoom = serverRoom;
            StateHasChanged();
        });
    }

    async Task StartGame()
    {
        if (HubConnection is null || CurrentRoom is null)
            return;

        await HubConnection.InvokeAsync("StartGame", CurrentRoom.RoomId);
    }
}
